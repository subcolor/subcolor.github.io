{"version":3,"sources":["config/EventBus.js","components/color-picker/ColorPicker.js","components/header/Header.js","components/color/Color.js","components/colors/Colors.js","components/copied/Copied.js","pages/home/Home.js","serviceWorker.js","index.js"],"names":["EventEmitter","Events","ColorPicker","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","displayPicker","setState","_this2","_this$props","color","onChange","react_default","a","createElement","className","style","backgroundColor","onClick","handleClick","handleClose","lib","React","Component","proptypes","PropTypes","string","func","defaultProps","Header","key","Event","emit","number","inputs","color_picker_ColorPicker","start","onColorChange","end","type","min","midpointChange","target","value","midpoint","object","Color","copyToClipboard","str","el","document","setAttribute","position","left","body","appendChild","selected","getSelection","rangeCount","getRangeAt","select","execCommand","removeChild","removeAllRanges","addRange","color_code","isDark","ColorX","hex","cx","color--dark","bind","Colors","colors","map","i","color_Color","prototypes","array","Copied","isActive","active","bool","defaultInputs","Home","isCopied","ColorGradient","self","on","setTimeout","data","input","_this$state","header_Header","colors_Colors","copied_Copied","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","home_Home","getElementById","URL","process","href","origin","addEventListener","concat","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.bf1f28bb.chunk.js","sourcesContent":["import Events from \"events\";\n\nlet EventEmitter = new Events.EventEmitter();\n\nexport default EventEmitter;\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { SketchPicker } from \"react-color\";\r\n\r\n//style\r\nimport \"./style.scss\";\r\n\r\nclass ColorPicker extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      displayPicker: false\r\n    };\r\n  }\r\n\r\n  handleClick() {\r\n    this.setState({\r\n      displayPicker: true\r\n    });\r\n  }\r\n\r\n  handleClose() {\r\n    this.setState({\r\n      displayPicker: false\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { color, onChange } = this.props;\r\n    const { displayPicker } = this.state;\r\n    return (\r\n      <div className={\"color-picker\"}>\r\n        <div\r\n          className=\"color-picker__input\"\r\n          style={{ backgroundColor: color }}\r\n          onClick={() => this.handleClick()}\r\n        />\r\n        {displayPicker && (\r\n          <div className={\"picker-wrapper\"}>\r\n            <div\r\n              className={\"picker-handler\"}\r\n              onClick={() => this.handleClose()}\r\n            />\r\n            <SketchPicker color={color} onChange={onChange} />\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nColorPicker.proptypes = {\r\n  color: PropTypes.string,\r\n  onChange: PropTypes.func\r\n};\r\n\r\nColorPicker.defaultProps = {\r\n  color: \"#124\"\r\n};\r\n\r\nexport default ColorPicker;\r\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ColorPicker from \"../color-picker\";\n\n//EventBus\nimport Event from \"../../config/EventBus\";\n\n//style\nimport \"./style.scss\";\n\nclass Header extends React.Component {\n  onColorChange(color, key) {\n    Event.emit(\"colorChanged\", { color, key });\n  }\n\n  midpointChange(number) {\n    Event.emit(\"midpointChanged\", { number });\n  }\n\n  render() {\n    const { inputs } = this.props;\n    return (\n      <div className={\"header\"}>\n        <div className={\"container\"}>\n          From\n          <ColorPicker\n            color={inputs.start}\n            onChange={color => this.onColorChange(color, \"start\")}\n          />\n          to\n          <ColorPicker\n            color={inputs.end}\n            onChange={color => this.onColorChange(color, \"end\")}\n          />\n          generate\n          <input\n            className={\"midpoint-field\"}\n            type=\"number\"\n            min=\"1\"\n            onChange={number => this.midpointChange(number.target.value)}\n            value={inputs.midpoint}\n          />{\" \"}\n          colors\n        </div>\n      </div>\n    );\n  }\n}\n\nHeader.proptypes = {\n  inputs: PropTypes.object\n};\n\nexport default Header;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ColorX from \"color\";\nimport cx from \"classnames\";\n\nimport Event from \"../../config/EventBus\";\n\nimport \"./style.scss\";\n\nclass Color extends React.Component {\n  copyToClipboard = str => {\n    const el = document.createElement(\"textarea\");\n    el.value = str;\n    el.setAttribute(\"readonly\", \"\");\n    el.style.position = \"absolute\";\n    el.style.left = \"-9999px\";\n    document.body.appendChild(el);\n    const selected =\n      document.getSelection().rangeCount > 0\n        ? document.getSelection().getRangeAt(0)\n        : false;\n    el.select();\n    document.execCommand(\"copy\");\n    document.body.removeChild(el);\n    if (selected) {\n      document.getSelection().removeAllRanges();\n      document.getSelection().addRange(selected);\n    }\n\n    Event.emit(\"copied\", str);\n  };\n\n  render() {\n    const { color_code } = this.props;\n    const isDark = ColorX(color_code).isDark();\n    const hex = ColorX(color_code).hex();\n    return (\n      <div\n        className={cx(\"color\", { \"color--dark\": isDark })}\n        style={{ backgroundColor: color_code }}\n        onClick={this.copyToClipboard.bind(this, hex)}\n      >\n        <span className={\"color__copy\"}>COPY</span>\n        <span className={\"color__code\"}>{hex}</span>\n      </div>\n    );\n  }\n}\n\nColor.proptypes = {\n  color_code: PropTypes.string\n};\n\nColor.defaultProps = {\n  color_code: \"#124\"\n};\n\nexport default Color;\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Color from \"../color\";\r\nimport \"./style.scss\";\r\n\r\nclass Colors extends React.Component {\r\n  render() {\r\n    const { colors } = this.props;\r\n    return (\r\n      <div className={\"colors-wrapper\"}>\r\n        <div className={\"colors\"}>\r\n          {colors.map((color, i) => (\r\n            <Color key={i} color_code={color} />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nColors.prototypes = {\r\n  colors: PropTypes.array\r\n};\r\n\r\nexport default Colors;\r\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport cx from \"classnames\";\n\nimport \"./style.scss\";\nimport Color from \"../color\";\n\nclass Copied extends React.Component {\n  render() {\n    const { color, isActive } = this.props;\n    return (\n      <div\n        className={cx(\"copied\", { active: isActive })}\n        style={{ backgroundColor: color }}\n      >\n        <div className={\"copied__text-wrapper\"}>\n          <span className={\"copied__text\"}>Copied</span>\n        </div>\n      </div>\n    );\n  }\n}\n\nCopied.prototypes = {\n  color: PropTypes.string,\n  isActive: PropTypes.bool\n};\n\nColor.defaultProps = {\n  color: \"#124\",\n  isActive: false\n};\n\nexport default Copied;\n","import React, { Component } from \"react\";\nimport ColorGradient from \"color-gradient\";\n\n//EventBus\nimport Event from \"../../config/EventBus\";\n\n//Components\nimport Header from \"../../components/header\";\nimport Colors from \"../../components/colors\";\nimport Copied from \"../../components/copied\";\n\n//Style\nimport \"./style.scss\";\n\nconst defaultInputs = {\n  start: \"#EE578D\",\n  end: \"#1D7AEE\",\n  midpoint: 6\n};\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      inputs: defaultInputs,\n      isCopied: false,\n      color: \"#124\",\n      colors: ColorGradient(\n        defaultInputs.start,\n        defaultInputs.end,\n        defaultInputs.midpoint\n      )\n    };\n  }\n\n  componentDidMount() {\n    let self = this;\n\n    Event.on(\"copied\", color => {\n      self.setState(\n        {\n          isCopied: true,\n          color: color\n        },\n        () => {\n          setTimeout(() => {\n            self.setState({\n              isCopied: false\n            });\n          }, 1000);\n        }\n      );\n    });\n\n    Event.on(\"colorChanged\", data => {\n      let input = self.state.inputs;\n      input[data.key] = data.color.hex;\n\n      self.setState({\n        inputs: input,\n        colors: ColorGradient(input.start, input.end, input.midpoint)\n      });\n    });\n\n    Event.on(\"midpointChanged\", data => {\n      let input = self.state.inputs;\n      input.midpoint = data.number;\n\n      self.setState({\n        inputs: input,\n        colors: ColorGradient(input.start, input.end, input.midpoint)\n      });\n    });\n  }\n\n  render() {\n    const { color, isCopied, inputs, colors } = this.state;\n    return (\n      <div className=\"Home\">\n        <Header inputs={inputs} />\n\n        <Colors colors={colors} />\n\n        <Copied color={color} isActive={isCopied} />\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport Home from \"./pages/home\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<Home />, document.getElementById(\"root\"));\r\n\r\nserviceWorker.register();\r\n"],"sourceRoot":""}